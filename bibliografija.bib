
@inproceedings{ongaro_search_2014,
	title = {In Search of an Understandable Consensus Algorithm},
	isbn = {978-1-931971-10-2},
	url = {https://www.usenix.org/conference/atc14/technical-sessions/presentation/ongaro},
	eventtitle = {2014 \{{USENIX}\} Annual Technical Conference (\{{USENIX}\} \{{ATC}\} 14)},
	pages = {305--319},
	author = {Ongaro, Diego and Ousterhout, John},
	urldate = {2020-02-22},
	date = {2014},
	langid = {english},
	file = {Full Text PDF:C\:\\Users\\Edvard\\Zotero\\storage\\8QKRA27A\\Ongaro and Ousterhout - 2014 - In Search of an Understandable Consensus Algorithm.pdf:application/pdf}
}

@article{ongaro_consensus,
	title = {Consensus: Bridging Theory and Practice},
	pages = {258},
	author = {Ongaro, Diego},
	langid = {english},
	file = {Ongaro - Consensus Bridging Theory and Practice.pdf:C\:\\Users\\Edvard\\Zotero\\storage\\9KXF3ELJ\\Ongaro - Consensus Bridging Theory and Practice.pdf:application/pdf}
}

@online{diego_designing_2016,
	title = {Designing for Understandability: The Raft Consensus Algorithm - {YouTube}},
	url = {https://www.youtube.com/watch?v=vYp4LYbnnW8},
	author = {Diego, Ongaro and John, Ousterhout},
	urldate = {2020-04-07},
	date = {2016-10-28}
}

@software{rabbitmqra,
	author = {Ra},
	title = {rabbitmq/ra},
	url = {https://github.com/rabbitmq/ra},
	abstract = {A Raft implementation for Erlang and Elixir that strives to be efficient and make it easier to use multiple Raft clusters in a single system.},
	publisher = {{RabbitMQ}},
	urldate = {2020-02-22},
	date = {2020-02-21},
	note = {original-date: 2017-02-22T17:07:57Z},
	keywords = {distributed-systems, erlang, raft, raft-consensus-algorithm}
}

@book{steen_distributed_2017,
	location = {London},
	edition = {Third edition (Version 3.01 (2017))},
	title = {Distributed systems},
	isbn = {978-90-815406-2-9 978-1-5430-5738-6},
	pages = {582},
	publisher = {Pearson Education},
	author = {Steen, Maarten van and Tanenbaum, Andrew S.},
	date = {2017},
	note = {{OCLC}: 1006750554}
}

@online{rabbitmq_website,
    author = {Pivotal},
	title = {Messaging that just works — {RabbitMQ}},
	url = {https://www.rabbitmq.com/},
	urldate = {2020-03-22},
	file = {Messaging that just works — RabbitMQ:C\:\\Users\\Edvard\\Zotero\\storage\\DP9S95V6\\www.rabbitmq.com.html:text/html}
}

@online{ericsson_erlang_processes_2016,
    author = {Ericsson},
	title = {Erlang -- Processes},
	url = {http://erlang.org/doc/reference_manual/processes.html#monitors},
	urldate = {2020-05-06},
	date = {2020-05-06},
	file = {Erlang -- Processes:C\:\\Users\\Edvard\\Zotero\\storage\\3XSGZF55\\processes.html:text/html}
}

@software{rabbitmq_aten_2020,
	title = {rabbitmq/aten},
	author = {Aten},
	url = {https://github.com/rabbitmq/aten},
	abstract = {An adaptive accrual node failure detection library for Elixir and Erlang},
	publisher = {{RabbitMQ}},
	urldate = {2020-05-06},
	date = {2020-04-22},
	note = {original-date: 2018-01-31T13:51:46Z},
	keywords = {distributed-systems, elixir, erlang, failure-detection}
}